{"version":3,"sources":["layout/partial/postCard.jsx","layout/widget/loading/loadingComment.jsx","layout/partial/comment/disqus.jsx","layout/partial/comment.jsx","layout/post.jsx","layout/widget/cardShadow.jsx","layout/widget/title.jsx","layout/widget/loadingCard.jsx","layout/widget/rowPageCard.jsx","layout/partial/postCard/content.jsx","layout/partial/postCard/info/time.jsx","layout/partial/postCard/info/moreCardInfo.jsx","layout/partial/postCard/info/cardInfo.jsx"],"names":["PostCard","data","this","props","margin","window","isLg","style","marginTop","textAlign","fontSize","color","fontWeight","info","title","isPage","value","content","React","Component","LoadingComment","width","height","display","Loading","size","type","loading","text","error","a","document","getElementById","innerHTML","e","console","log","postId","id","disqus_config","page","url","location","href","identifier","undefined","DISQUS","accessDisqus","d","s","createElement","src","async","onerror","setAttribute","Date","head","body","appendChild","reset","reload","config","Disqus","load","Comment","name","Site","comment","Mod","modIndex","enable","innerWidth","padding","renderMod","InfoCard","lazy","Row","Grid","Post","state","getPost","getPostData","setTitle","setMeta","slice","replace","setState","nav","CardShadow","backgroundColor","className","children","defaultProps","Title","Col","LoadingCard","RowPageCard","xs","xl","xxl","fallback","Content","span","offset","dangerouslySetInnerHTML","__html","Time","TimeToString","time","Fragment","isUpdated","_","dateTime","ISO","itemProp","loacl","MoreCardInfo","md","Icon","marginRight","lineHeight","date","CardInfo","update"],"mappings":"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","file":"static/js/6.569e3987.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardInfo } from './postCard/Info';\nimport Content from './postCard/content';\nimport CardShadow from '../widget/cardShadow';\nimport Title from '../widget/title';\n                \nexport default class PostCard extends React.Component {\n    render() {\n        let data = this.props.data;\n        return (\n            <CardShadow margin={ window.isLg ? '28px' : '0' }>\n                <Title \n                    style={{ \n                        marginTop: '8px',\n                        textAlign: 'center' , \n                        fontSize: '25px',\n                        color: '#444',\n                        fontWeight: 700 \n                    }}\n                >{data.info.title}</Title>\n                <div>\n                    {!this.props.isPage && <CardInfo info={this.props.data.info} />}\n                </div>\n                <Content value={data.content} />\n            </CardShadow>\n        );\n    }\n}\n\nPostCard.propTypes = {\n    isPage: PropTypes.bool,\n    data: PropTypes.shape({\n        info: PropTypes.object,\n        content: PropTypes.string \n    })\n};","import React from 'react';\nimport Loading from 'yoshino/lib/Loading';import 'yoshino/lib/Loading/style/index.js';\n\nexport default class LoadingComment extends React.Component {\n\n    render() {\n        return (\n            <div style={ {\n                width: 'auto',\n                height: 'auto',\n                display: 'block',\n                margin: '0 auto',\n                fontSize: '50px',\n            } }\n            >\n                <Loading size='auto' type='a' loading={ true } style={ { display: 'block' } } text='loading...' />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport LoadingComment from '../../widget/loading/loadingComment';\nimport PropTypes from 'prop-types';\n\nasync function error() {\n    try {\n        let disqusDom = document.getElementById('disqus_thread');\n        disqusDom.innerHTML = 'Disqus加载失败, 请检查您的地区是否支持Disqus';//这个没必要i18n吧\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nasync function load(postId, id) {\n    window.disqus_config = function () {\n        this.page.url = window.location.href;\n        this.page.identifier = postId;\n    };\n\n    if (window.DISQUS === undefined) {\n        window.accessDisqus = true;\n        (async () => {\n            const d = document, s = d.createElement('script');\n            s.src = `//${id}.disqus.com/embed.js`;\n            s.async = true;\n            s.onerror = () => {\n                window.accessDisqus = false;\n                window.DISQUS = null;\n                error();\n            };\n            s.setAttribute('data-timestamp', + new Date());\n            (d.head || d.body).appendChild(s);\n        })();\n    } else {\n        \n        if (!window.accessDisqus) {\n            error();\n            return false;\n        }\n\n        window.DISQUS.reset({\n            reload: true,\n            config: () => {\n                this.page.identifier = postId;\n                this.page.url = window.location.href;\n            }\n        });\n        \n    }\n}\n\nexport default class Disqus extends React.Component {\n\n    componentDidMount() {\n        load(this.props.postId, this.props.id);\n    }\n\n    render() {\n        return (\n            <div id='disqus_thread'>\n                {window.DISQUS === undefined && <LoadingComment />}\n            </div>\n        );\n    }\n}\n\nDisqus.propTypes = {\n    postId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardShadow from '../widget/cardShadow';\nimport { Site } from '../../global';\nimport * as modIndex from './comment/index';\n\nexport default class Comment extends React.Component {\n    renderMod() {\n        let postId = this.props.postId;\n\n        for (let name in Site.config.comment){\n            let Mod = modIndex[name];\n            if (Site.config.comment[name].enable) {\n                return (<Mod postId={postId} id={Site.config.comment[name].id} />);\n            }\n        }\n\n        return (<div>null</div>);\n    }\n\n    render() {\n        let isLg = window.innerWidth > 992;\n        \n        return (\n            <CardShadow margin={ isLg ? '24px' : '0' }>\n                <div id='comment' style={{padding: '10px'}}>\n                    { this.renderMod() }\n                </div>\n            </CardShadow>\n        );\n    }\n}\n\nComment.propTypes = {\n    postId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nimport LoadingCard from './widget/loadingCard';\nimport PostCard from './partial/postCard';\nimport RowPageCard from './widget/rowPageCard';\nimport Comment from './partial/comment';\nimport { Site } from '../global';\nconst InfoCard = React.lazy(() => import('./partial/infoCard'));\nconst { Row } = Grid;\n\nexport default class Post extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            id: null,\n            loading: true,\n            data: {},\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.data.id !== state.id) {\n            return {\n                loading: true\n            };\n        }\n\n        return null;\n    }\n\n    getPostData(id) {\n        return Site.getPost(id);\n    }\n\n    async componentDidMount() {\n        let state = this.state;\n        let id = this.props.data.id;\n        \n        state.data = await this.getPostData(id);\n        state.id = id;\n        \n        Site.setTitle(this.state.data.info.title);\n        Site.setMeta('description', this.state.data.content.slice(0, 80).replace(/<[^>]+>/g, ''));\n        state.loading = false;\n        this.setState(state);\n    }\n\n    render() {\n        return (\n            <Row>\n                <LoadingCard width={ window.isLg ? undefined : '100%'} loading={ this.state.loading }>\n                    { !this.state.loading &&\n                    <RowPageCard InfoCard={<InfoCard type='post' nav={this.state.data.nav} />}>\n                        <PostCard data={this.state.data} isPage={false} />\n                        <Comment postId={this.state.id} />\n                    </RowPageCard>\n                    }\n                </LoadingCard>\n            </Row>\n        );\n    }\n}\n\nPost.propTypes = {\n    data: PropTypes.shape({\n        id: PropTypes.number\n    })\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nconst { Row } = Grid;\n\nexport default class CardShadow extends React.Component {\n    render() {\n        return (\n            <Row style={{ backgroundColor: '#f5f5f5', margin: this.props.margin}} className={'yoshino-card-shadow'} >\n                {this.props.children}\n            </Row>\n        );\n    }\n}\n\nCardShadow.defaultProps = {\n    margin: '0'\n};\n\nCardShadow.propTypes = {\n    margin: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nexport default class Title extends React.Component {\n    render() {\n        return (\n            <h2 \n                style={this.props.style}\n            >\n                {this.props.children}\n            </h2>\n        );\n    }\n}\n\nTitle.propTypes = {\n    style: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nimport Loading from './loading/loadingPage';\nconst { Col } = Grid;\n\nexport default class LoadingCard extends React.Component {\n    render() {\n        return (\n            <Col\n                style={ {\n                    width: this.props.width,\n                    display: 'block',\n                    margin: '0 auto',\n\n                } }\n            >\n                { this.props.loading &&\n                    <Loading Loading={ this.props.loading } />\n                }\n\n                { this.props.children }\n            </Col>\n        );\n    }\n}\n\nLoadingCard.defaultProps = {\n    width: '92%'\n};\n\nLoadingCard.propTypes = {\n    width: PropTypes.string,\n    loading: PropTypes.bool,\n    children:  PropTypes.oneOfType([PropTypes.element, PropTypes.bool])\n};","import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nconst { Col, Row } = Grid;\n\nexport default class RowPageCard extends React.Component {\n    render() {\n        return (\n            <Row>\n                <Col\n                    xs={ 24 }\n                    xl={ 17 }\n                    xxl={ 22 }\n                >\n                    { this.props.children }\n                </Col>\n                <Col xs={ 0 } xl={ 7 } xxl={ 2 }>\n                    <Suspense fallback={ <div> Loading... </div> }>\n                        { this.props.InfoCard }\n                    </Suspense>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nRowPageCard.defaultProps = {\n    InfoCard: <div></div>\n};\n\nRowPageCard.propTypes = {\n    InfoCard: PropTypes.element,\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nconst { Col, Row } = Grid;\n\nexport default class Content extends React.Component {\n    render() {\n        return (\n            <Row>\n                <Col span={ 22 } offset={ 1 }>\n                    <div dangerouslySetInnerHTML={ { __html: this.props.value } } style={ { marginTop: '24px' } } className='post-body'>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nContent.propTypes = {\n    value: PropTypes.string\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { i18n as _, TimeToString } from '../../../../global';\n\nexport default class Time extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            TimeToString: new TimeToString(this.props.time)\n        };\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                { this.props.isUpdated && <span>| </span>}\n                <span>{ _( this.props.isUpdated ? 'Updated' : 'Posted') }</span>\n                <time\n                    dateTime={ this.state.TimeToString.ISO() }\n                    itemProp=\"dateCreated datePublished\"\n                    style={ { margin: '4px' } }\n                >\n                    { this.state.TimeToString.loacl() }\n                </time>\n            </React.Fragment>\n        );\n    }\n}\n\nTime.propTypes = {\n    isUpdated: PropTypes.bool,\n    time: PropTypes.number\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';import Icon from 'yoshino/lib/Icon';import 'yoshino/lib/Icon/style/index.js';\nimport Time from './time';\nconst { Col, Row } = Grid;\n\n//todo tag\nexport default class MoreCardInfo extends React.Component {\n    render() {\n        return (\n            <div\n                style={ {\n                    marginTop: '8px',\n                    //textAlign: 'center',\n                    fontSize: '12px',\n                    color: '#555'\n                } }\n            >\n                <Row>\n                    <Col xs={ 9 } md={ 11 } style={ { textAlign: 'right' } }>\n                        <Icon type='md-calendar' style={ { color: '#51b26d', fontSize: 16, marginRight: '2px' } } />\n                    </Col>\n\n                    <Col xs={ 15 } md={ 12 } style={ { textAlign: 'left', lineHeight: '18px' } }>\n                        <Time isUpdated={false} info='Posted' time={this.props.info.date}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nMoreCardInfo.propTypes = {\n    info: PropTypes.shape({\n        date: PropTypes.number\n    })\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nimport Time from './time';\nconst { Col, Row } = Grid;\n\nexport default class CardInfo extends React.Component {\n    render() {\n        return (\n            <div\n                style={ {\n                    marginTop: '8px',\n                    textAlign: 'center',\n                    fontSize: '12px',\n                    color: '#555'\n                } }\n            >\n                <Row>\n                    <Col style={ { lineHeight: '18px' } }>\n                        <Time isUpdated={false} time={this.props.info.date}/>\n                        { this.props.info.update && \n                            <Time isUpdated={true} time={this.props.info.update} />\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nCardInfo.propTypes = {\n    info: PropTypes.shape({\n        update: PropTypes.number,\n        date: PropTypes.number\n    })\n};"],"sourceRoot":""}