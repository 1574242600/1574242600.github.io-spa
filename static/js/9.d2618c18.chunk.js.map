{"version":3,"sources":["layout/partial/linkCard.jsx","layout/link.jsx","layout/widget/cardShadow.jsx","layout/widget/title.jsx","layout/widget/loadingCard.jsx"],"names":["Col","Grid","LinkCard","data","this","props","xs","lg","sm","style","padding","href","url","textDecoration","src","avatar","alt","title","width","height","color","fontSize","name","intr","React","Component","Row","Links","state","loading","list","Site","getPage","setMeta","setState","map","v","index","key","window","isLg","undefined","margin","fontWeight","paddingLeft","_","renderLinkCard","CardShadow","backgroundColor","className","children","defaultProps","Title","LoadingCard","display","Loading"],"mappings":"sQAGQA,EAAQC,IAARD,IAEaE,E,uKAEb,IAAMC,EAAOC,KAAKC,MAAMF,KAExB,OACI,kBAACH,EAAD,CAAKM,GAAK,GAAKC,GAAK,EAAIC,GAAK,EAAGC,MAAO,CAACC,QAAS,UAC7C,uBAAGC,KAAOR,EAAKS,IAAMH,MAAO,CAAEI,eAAgB,SAC1C,yBAAKC,IAAMX,EAAKY,OAASC,IAAMb,EAAKc,MAAQR,MAAO,CAACS,MAAM,QAAQC,OAAQ,WAC1E,wBAAIV,MAAO,CAACW,MAAO,OAAQC,SAAU,SAAYlB,EAAKmB,MACtD,0BAAMb,MAAO,CAACY,SAAU,SAAWlB,EAAKoB,Y,GATtBC,IAAMC,W,uBCEpCC,EAAQzB,IAARyB,IAEaC,E,kDACjB,WAAatB,GAAQ,IAAD,8BAChB,cAAMA,IACDuB,MAAQ,CACTC,SAAS,EACTC,KAAM,IAJM,E,uLAUZF,EAAQxB,KAAKwB,M,SACEG,IAAKC,QAAQ,Q,OAAhCJ,EAAME,K,OACNF,EAAMC,SAAU,EAChBE,IAAKE,QAAQ,cAAe,kCAC5B7B,KAAK8B,SAASN,G,6IAId,OAAOxB,KAAKwB,MAAME,KAAKK,KAAI,SAACC,EAAGC,GAC3B,OAAQ,kBAAC,EAAD,CAAUlC,KAAOiC,EAAIE,IAAMD,S,+BAMvC,OACI,kBAACX,EAAD,KACI,kBAAC,IAAD,CAAaR,MAAQqB,OAAOC,UAAOC,EAAY,MAAOZ,QAAUzB,KAAKwB,MAAMC,UACpEzB,KAAKwB,MAAMC,SACV,kBAAC,IAAD,CAAYa,OAASH,OAAOC,KAL7B,OAK6C,KACxC,kBAAC,IAAD,CAAO/B,MAAQ,CACXY,SAAU,OACVD,MAAO,OACPuB,WAAY,IACZC,YAAa,UACZC,YAAE,UAEP,kBAACnB,EAAD,CAAKjB,MAAQ,CAAEiC,OAbpB,SAcWtC,KAAK0C,yB,GAvCJtB,IAAMC,Y,0HCNjCC,G,MAAQzB,IAARyB,KAEaqB,E,uKAEb,OACI,kBAACrB,EAAD,CAAKjB,MAAO,CAAEuC,gBAAiB,UAAWN,OAAQtC,KAAKC,MAAMqC,QAASO,UAAW,uBAC5E7C,KAAKC,MAAM6C,c,GAJY1B,IAAMC,WAU9CsB,EAAWI,aAAe,CACtBT,OAAQ,M,kHCdSU,E,uKAEb,OACI,wBACI3C,MAAOL,KAAKC,MAAMI,OAEjBL,KAAKC,MAAM6C,c,GANO1B,IAAMC,Y,0ICEjCzB,EAAQC,IAARD,IAEaqD,E,uKAEb,OACI,kBAACrD,EAAD,CACIS,MAAQ,CACJS,MAAOd,KAAKC,MAAMa,MAClBoC,QAAS,QACTZ,OAAQ,WAIVtC,KAAKC,MAAMwB,SACT,kBAAC,IAAD,CAAS0B,QAAUnD,KAAKC,MAAMwB,UAGhCzB,KAAKC,MAAM6C,c,GAfY1B,IAAMC,WAqB/C4B,EAAYF,aAAe,CACvBjC,MAAO","file":"static/js/9.d2618c18.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nconst { Col } = Grid;\n\nexport default class LinkCard extends React.Component {\n    render() {\n        const data = this.props.data;\n\n        return (\n            <Col xs={ 12 } lg={ 6 } sm={ 8} style={{padding: '16px '}}>\n                <a href={ data.url } style={{ textDecoration: 'none'}} >\n                    <img src={ data.avatar } alt={ data.title } style={{width:'100px',height: '100px'}}/>\n                    <h3 style={{color: '#555', fontSize: '16px'}} >{ data.name }</h3>\n                    <span style={{fontSize: '12px'}}>{ data.intr }</span>\n                </a>\n            </Col>\n        );\n    }\n}\n\nLinkCard.propTypes = {\n    data: PropTypes.shape({\n        url: PropTypes.string,\n        avatar: PropTypes.string,\n        title: PropTypes.string,\n        name: PropTypes.string,\n        intr: PropTypes.string\n    })\n};","import React from 'react';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nimport LoadingCard from './widget/loadingCard';\nimport LinkCard from './partial/linkCard';\nimport Title from './widget/title';\nimport { Site, i18n as _ } from '../global';\nimport CardShadow from './widget/cardShadow';\nconst { Row } = Grid;\n\nexport default class Links extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            loading: true,\n            list: [],\n            //total: 0\n        };\n    }\n\n    async componentDidMount() {\n        let state = this.state;\n        state.list = await Site.getPage('link');\n        state.loading = false;\n        Site.setMeta('description', '我的朋友们');\n        this.setState(state);\n    }\n\n    renderLinkCard() {\n        return this.state.list.map((v, index) => {\n            return (<LinkCard data={ v } key={ index } />);\n        });\n    }\n\n    render() {\n        const margin = '24px';\n        return (\n            <Row>\n                <LoadingCard width={ window.isLg ? undefined : '95%'} loading={ this.state.loading } >\n                    { !this.state.loading &&\n                        <CardShadow margin={ window.isLg ? margin : '0' }>\n                            <Title style={ {\n                                fontSize: '36px',\n                                color: '#444',\n                                fontWeight: 700,\n                                paddingLeft: '16px '\n                            } }>{_('Links')}</Title>\n\n                            <Row style={ { margin: margin } }>\n                                { this.renderLinkCard() }\n                            </Row>\n                        </CardShadow>\n                    }\n                </LoadingCard>\n            </Row>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nconst { Row } = Grid;\n\nexport default class CardShadow extends React.Component {\n    render() {\n        return (\n            <Row style={{ backgroundColor: '#f5f5f5', margin: this.props.margin}} className={'yoshino-card-shadow'} >\n                {this.props.children}\n            </Row>\n        );\n    }\n}\n\nCardShadow.defaultProps = {\n    margin: '0'\n};\n\nCardShadow.propTypes = {\n    margin: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nexport default class Title extends React.Component {\n    render() {\n        return (\n            <h2 \n                style={this.props.style}\n            >\n                {this.props.children}\n            </h2>\n        );\n    }\n}\n\nTitle.propTypes = {\n    style: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from 'yoshino/lib/Grid';import 'yoshino/lib/Grid/style/index.js';\nimport Loading from './loading/loadingPage';\nconst { Col } = Grid;\n\nexport default class LoadingCard extends React.Component {\n    render() {\n        return (\n            <Col\n                style={ {\n                    width: this.props.width,\n                    display: 'block',\n                    margin: '0 auto',\n\n                } }\n            >\n                { this.props.loading &&\n                    <Loading Loading={ this.props.loading } />\n                }\n\n                { this.props.children }\n            </Col>\n        );\n    }\n}\n\nLoadingCard.defaultProps = {\n    width: '92%'\n};\n\nLoadingCard.propTypes = {\n    width: PropTypes.string,\n    loading: PropTypes.bool,\n    children:  PropTypes.oneOfType([PropTypes.element, PropTypes.bool])\n};"],"sourceRoot":""}